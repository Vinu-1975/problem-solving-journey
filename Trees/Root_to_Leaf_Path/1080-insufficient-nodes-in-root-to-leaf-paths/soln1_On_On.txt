# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sufficientSubset(self, root: Optional[TreeNode], limit: int) -> Optional[TreeNode]:
        path_sum = 0
        def dfs(root,limit):
            if root is None:
                return None

            if not root.left and not root.right:
                return root if root.val >= limit else None
            root.left = dfs(root.left,limit - root.val)
            root.right = dfs(root.right,limit - root.val)

            if not root.left and not root.right:
                return None
            return root
        res = dfs(root,limit)
        return res