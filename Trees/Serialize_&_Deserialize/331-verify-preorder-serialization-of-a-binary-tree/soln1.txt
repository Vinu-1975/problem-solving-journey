class Solution:
    def isValidSerialization(self, preorder: str) -> bool:
        preorder = preorder.split(',')

        slot = 1
        for node in preorder:
            if slot == 0:
                return False
            if node != "#":
                slot += 1
            else:
                slot -= 1
        
        return slot == 0



"""
We just need to remember how many empty slots we have during the process.

Initially we have one ( for the root ).

for each node we check if we still have empty slots to put it in.

a null node occupies one slot.
a non-null node occupies one slot before he creates two more. the net gain is one.

"""