class Solution:
    # time - O(mn)
    # space - O(mn)
    def numIslands(self, grid: List[List[str]]) -> int:
        
        def dfs(r,c):
            if (r not in range(len(grid))) or (c not in range(len(grid[0]))) or ((r,c) in visited) or (grid[r][c] == "0"):
                return
            visited.add((r,c))
            moves = [(0,1),(0,-1),(1,0),(-1,0)]
            for dr,dc in moves:
                dfs(r+dr,c+dc)
            


        m, n = len(grid), len(grid[0])
        visited = set()
        res = 0
        for r in range(m):
            for c in range(n):
                if grid[r][c] == "1" and (r,c) not in visited:
                    res += 1
                    dfs(r,c)
        
        return res