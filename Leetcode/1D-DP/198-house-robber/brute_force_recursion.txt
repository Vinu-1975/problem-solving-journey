class Solution:
    def rob(self, nums: List[int]) -> int:
        # time - O(2^n)
        # space - O(n)
        def dfs(i):
            if i >= len(nums): # if out of index, no more house to rob, so return 0
                return 0
            
            rob_current = nums[i] + dfs(i+2)
            skip_current = dfs(i+1)

            return max(rob_current,skip_current)

    
        return dfs(0)